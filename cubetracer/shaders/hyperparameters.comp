#define CST_USE_FRESNEL true
#define CST_USE_BEER_ATTENUATION true

const bool CST_SHADOW_ACTIVATED = <<<CST_SHADOW_ACTIVATED>>>;
const bool CST_SPECULAR_ACTIVATED = false;
const int  CST_TEXTURE_QUALITY_COEFF = <<<CST_TEXTURE_QUALITY_COEFF>>>;

const float CST_SPECULAR_SHININESS = 16;

const float CST_EPSILON = 1e-4;
const uint CST_CHUNK_WIDTH = 16;
const uint CST_CHUNK_HEIGHT = 256;
const vec3 CST_LOCAL_TO_WORLD = vec3(CST_CHUNK_WIDTH);
const vec3 CST_WORLD_TO_LOCAL = 1 / CST_LOCAL_TO_WORLD;

const uint CST_VIEW_DISTANCE = <<<CST_VIEW_DISTANCE>>>;
const uint CST_NB_CHUNKS_X = (2*CST_VIEW_DISTANCE);
const uint CST_NB_CHUNKS_XZ = CST_NB_CHUNKS_X * CST_NB_CHUNKS_X;

const uint CST_NB_BLOCKS_X = CST_NB_CHUNKS_X * CST_CHUNK_WIDTH;

const vec3 CST_LIGHT_DIRECTION = normalize(vec3(-0.7, -1.5, -1.1));
const vec3 CST_LIGHT_DIRECTION_INV = 1 / CST_LIGHT_DIRECTION;
const vec3 CST_LIGHT_AMBIENT = vec3(0);

const uint CST_MAX_ITER_UNCERTAIN_BLOCKS = 32;
const uint CST_MAX_ITER_TRANSPARENT = 16;
const uint CST_MAX_ITER_SHADOW = 16;
const uint CST_MAX_ITER_BLOCK_REFLECTION = 16;
const uint CST_MAX_ITER_WATER_REFLECTION = 64;
const uint CST_MAX_ITER_WATER_REFRACTION = 64;
const uint CST_MAX_ITER_RAY_AIR = 2 * CST_NB_CHUNKS_X * CST_CHUNK_WIDTH;
const uint CST_MAX_ITER_RAY_WATER = min(128, CST_MAX_ITER_RAY_AIR);

// Global Illum constants
const float CST_GI_MAXIMUM_RADIUS = 30.0; // radius of activation of the global illum
const uint  CST_GI_MAX_BOUNCE     = 5; // maximum number of bounces
const float CST_GI_DISTANCE_STIFFNESS = 10.0; // greater the value, better the quality of the GI will be at high distances, but slower (should range from 1 to 30)
// FIXME: each material should have its own reflectance
const float CST_GI_REFLECTANCE    = 0.3;
// FIXME-END: each material should have its own reflectance
const float CST_GI_MIN_COEF_LOSS  = 1e-5;

const float CST_MIN_LIGHTNING_INTENSITY = 0.01;

const vec3 CST_NORMAL_MAP[6] = {
    vec3(1, 0, 0),
    vec3(0, 1, 0),
    vec3(0, 0, 1),
    vec3(-1, 0, 0),
    vec3(0, -1, 0),
    vec3(0, 0, -1),
};

const uint CST_BLOCK_TYPE_AIR    = 0;
const uint CST_BLOCK_TYPE_WATER  = 1;

const vec3  CST_WATER_TRANSMITTANCE = vec3(0.4, 0.3, 0.1);
const float CST_WATER_IOR = 1.29;
