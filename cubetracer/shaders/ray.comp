struct Ray {
    vec3 origin;
    vec3 direction;
    vec3 direction_inv;
};

vec3 ray_direction(const vec2 pixel) {
    return normalize(in_uni_screen.top_left 
        - pixel.x * in_uni_screen.left
        - pixel.y * in_uni_screen.up);
}

Ray ray_make(const vec3 origin, const vec3 direction) {
    const vec3 r_dir_inv = 1 / direction;

    return Ray(origin, direction, r_dir_inv);
}

Ray ray_make_from_pixel(const vec2 pixel) {
    const vec3 origin = in_uni_origin - vec3(in_uni_cl_min_coords.x, 0, in_uni_cl_min_coords.y) * CST_LOCAL_TO_WORLD;
    const vec3 r_dir = ray_direction(pixel);
    const vec3 r_dir_inv = 1 / r_dir;

    return Ray(origin, r_dir, r_dir_inv);
}
